[{"title":"音乐API(魅族音乐).md","date":"2017-02-19T08:28:27.000Z","path":"2017/02/19/2017-02-19-抓出来的音乐API-md/","text":"魅族手机音乐API（如有侵权删）最近想写个音乐播放器，但是没有好的api支持，所有抓了魅族音乐的api 分页起始位置 和 分页数量 都是int 值，版本号我这里是 5.0, 所有未标注的请求方式都死GET 请求 API_HOST : http://fast.y.meizu.com/ 启动根据版本号拿到版本id /open/api/v2/ui/index.do?v={版本号} 根据版本id返回的首页id去请求乐库id /open/api/v2/ui/detail.do?id={版本id}&amp;start=0&amp;limit=1 根据返回的乐库id请求乐库数据 /open/api/v2/ui/detail.do?id={乐库id}&amp;start=0&amp;limit=10 乐库首页 音乐播放（播放需要参数，参数是反编译，读源码出来的,有些不准确） POST 请求/open/api/v2/song/getAudioInfo/{musicId}/0/1/19220771 params stamp : deviceId + EBL22MDZK(没读出来这段) + System.currentTimeMillis() version : v2 _musiccodeurl : /open/api/v2/song/getAudioInfo/{musicId}/0/1/19220771 sign ：MD5加密字符串 sign 需要做点处理，将上面三个的key 按照ASCII 拍下序，然后 12345678910StringBuilder localStringBuilder = new StringBuilder(\"MEIZU\"); for (int i = 0; i &lt; paramList.size(); i++) &#123; String value = paramList.get(i).getValue(); //将每个value拼接上去 localStringBuilder.append(value); if (i &lt; paramList.size() - 1) &#123; localStringBuilder.append(\"@\"); //然后以@拼接 &#125; &#125;localStringBuilder.append(\"MUSIC\"); //最后拼接上MUSICMD5Util.parseStrToMd5L32(localStringBuilder.toString()); //最后将字符串转换成32为的MD5小写字符串 ​ 搜索 /open/api/v2/search/vsearch.do?q={搜索key}&amp;geoloc=null&amp;include_optimum=true&amp;page={分页数目}&amp;limit={分页数量}&amp;installed_apps=[]&amp;search_Types=[3] 歌单（start 是分页标志,双数[0,2,4,6]） 热门歌单: /open/api/v2/ui/content.do?id={热门歌单id}&amp;start={分页起始位置}&amp;limit={分页数量} 歌单活动：/open/api/v2/ui/detail.do?id={歌单活动id}&amp;start={分页起始位置}&amp;limit={分页数量} 歌单详情 歌单详情: /open/api/v2/songList/detail/{歌单id}} 歌单详情列表：/open/api/v2/songList/songs/{歌单id}}/{分页起始位置}}/{分页数量} 歌单评论列表：/open/api/v2/comment/commentList.do?id={歌单id}}&amp;type={type}&amp;source=0&amp;startId=0&amp;limit={分页数量} 排行榜：open/api/v2/ui/detail.do?id={排行榜id}&amp;start={分页起始位置}&amp;limit={分页数量} {类别}榜 /open/api/v2/category/getCategoryRes.do?categoryId={类别id}&amp;start={分页起始位置}&amp;limit={分页数量}&amp;startId=0 歌曲电台(电台播放暂时还未去抓取) 获取电台类别id /open/api/v2/ui/detail.do?id={电台id}&amp;start={分页起始位置}&amp;limit={分页数量} {电台类别id} /open/api/v2/ui/detail.do?id={类别id}&amp;start={分页起始位置}&amp;limit={分页数量} 电台详情 /open/api/v2/category/getCategoryRes.do?categoryId={电台id}&amp;start={分页起始位置}&amp;limit={分页数量}&amp;startId=0","tags":[{"name":"API","slug":"API","permalink":"/dayanguai.website/tags/API/"}]},{"title":"Android-ADB(开发常用)","date":"2017-02-05T07:02:58.000Z","path":"2017/02/05/2017-02-05-Android-ADB(开发常用)/","text":"这是自己常用的一些常用的adb命令(虽然不是特别的准确，但是基本够用了。。。) adb 查看当前设备连接 1adb devices adb 重启手机 12adb reboot //手机重启adb reboot bootloader //重启手机到引导模式 adb 服务启动 12adb kill-server //杀死掉adb进程adb start-server //启动adb进程 adb 安装应用 12adb install com.xxx.xxx //直接安装adb install -r com.xxx.xxx //保留数据安装 adb 卸载应用 1adb uninstall com.xxx.xxx adb 清除应用信息 1adb shell pm clear com.xxx.xxx adb 日志查看 12adb logcat //所有的日志输出adb logcat | grep OkHttp //表示拦截 OkHttp 的日志 adb 查看当前显示的前台 Activity 1adb shell dumpsys window windows | grep -E \"mCurrentFocus\" adb 传输 12adb pull /sdcard/夏目友人帐 ~/Desktop夏目友人帐 //从手机导入到电脑adb push ~/Desktop/夏目友人帐 /sdcard/夏目友人帐 //从电脑传输到手机 这个我是目前用的最多的几个命令，mm， 这个这个github的讲解的比较详细，可以从这学习下,mm","tags":[{"name":"adb命令","slug":"adb命令","permalink":"/dayanguai.website/tags/adb命令/"}]},{"title":"Android-Animaion_两张图片实现剪切逐进动画","date":"2017-01-21T10:07:27.000Z","path":"2017/01/21/2017-01-21-Android-Animaion-两张图片实现剪切逐进动画/","text":"使用ValueAnimator实现逐渐覆盖的动画 在写项目的时候有语音播放的动画，跟着语音长度来展示波形动画，功能时间短，然后直接两张波形图，然后去逐渐剪切覆盖来进行展示动画(先看效果) 其实看到这个动画我是懵B的，这咋写，想想方法吧 首先是两张图，下面一张，上面一张，然后动画时间是语音的时长，随着时间走，上面一张逐渐覆盖下面一张(当然两张是一样大小的) 上面的那张图片是宽度在逐渐变大，使用ValueAnimator 动画控制View的宽度逐渐变大 图片宽度变大时候去裁剪图片的宽度，裁剪的宽度就是valueAnimator.getAnimatedValue() 的数值 思路是出来了，那么，写代码吧。 布局文件先写出来 123456789101112131415161718192021222324252627282930&lt;?xml version=\"1.0\" encoding=\"utf-8\"?&gt;&lt;FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\" android:layout_width=\"match_parent\" android:layout_height=\"match_parent\" android:orientation=\"vertical\" android:paddingLeft=\"50dp\" android:paddingTop=\"50dp\"&gt; &lt;ImageView android:id=\"@+id/bottom_image\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:background=\"@drawable/siri_graph_grey\"/&gt; &lt;ImageView android:id=\"@+id/top_image\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:visibility=\"gone\"/&gt; &lt;Button android:id=\"@+id/animation_crop\" android:layout_width=\"wrap_content\" android:layout_height=\"wrap_content\" android:layout_marginTop=\"100dp\" android:text=\"开始\"/&gt;&lt;/FrameLayout&gt; 当然两张图片是重合的，需要裁剪的图片先让它隐藏掉 然后咱们应该拿出图片的宽度吧 代码 1234567mBottomImage.post(new Runnable() &#123; @Override public void run() &#123; //获取控件的宽度 mVoiceImageWidth = mBottomImage.getMeasuredWidth(); &#125; &#125;); 在onCreate()方法去拿一个控件的宽度有很多种方法，就先这个吧，但是，我要是在列表的时候去播放的时候再去拿宽度，拿到的肯定是0吧，其实要拿的就是那个图片的宽度，可以在onCreate()里面这样去拿 12 bitmapOrg = BitmapFactory.decodeResource(getResources(), R.drawable.siri_graph_blue);//去拿bitmap的宽度，就是咱们控件的宽度(前提是当前控件是wrap_content) 这样可以拿出需要的宽度，那么写动画吧，看代码 1234567891011121314151617181920212223242526272829303132333435363738private void animation() &#123; /* 录音的动画 */ mView.setVisibility(View.VISIBLE); animator = ValueAnimator.ofInt(0, mVoiceImageWidth); animator.addUpdateListener( new ValueAnimator.AnimatorUpdateListener() &#123; @RequiresApi(api = Build.VERSION_CODES.JELLY_BEAN) @Override public void onAnimationUpdate(ValueAnimator valueAnimator) &#123; //得到的值 int value = (Integer) valueAnimator.getAnimatedValue(); //拿到当前View的布局参数 ViewGroup.LayoutParams params = mView.getLayoutParams(); //将得到的动画的偏移量的值设置为当前控件的宽度 params.width = value; params.height = mBottomImage.getHeight(); mView.setLayoutParams(params); //裁剪图片 BitmapDrawable drawable = cropImage(value); //将图片设置到View上 mView.setBackground(drawable); &#125; &#125; ); //动画结束的时候将界面还原 animator.addListener(new AnimatorListenerAdapter() &#123; @Override public void onAnimationEnd(Animator animation) &#123; super.onAnimationEnd(animation); mView.setVisibility(View.GONE); &#125; &#125;); animator.setDuration(4000); animator.setInterpolator(new LinearInterpolator()); animator.start(); &#125; 那么需要裁剪的图片的宽度就是动画的偏移量的值，上代码： 12345678910111213141516/**** 裁剪图片 记得try起来，会抛出一个异常*/private BitmapDrawable cropImage(int voiceImageWidth) &#123; BitmapDrawable bd = null; try &#123; //需要裁剪的宽度 int targetWidth = voiceImageWidth; //重新创建一个新的Bitmap Bitmap resizedBitmap = Bitmap.createBitmap(bitmapOrg, 0, 0, targetWidth, bitmapOrg.getHeight()); /*将bitmap转换成一个resource资源 */ bd = new BitmapDrawable(resizedBitmap); &#125; catch (Exception e) &#123; System.out.println(\"Error1 : \" + e.getMessage() + e.toString()); &#125; &#125; 好了代码就这么多，然后就需要看结果了！ 其实把思路理清楚了，然后看看Android API 就可以喽，没写过几次博客，勿喷，23333","tags":[{"name":"Android动画","slug":"Android动画","permalink":"/dayanguai.website/tags/Android动画/"}]},{"title":"Android开发中遇到的一些的小点","date":"2017-01-03T02:17:13.000Z","path":"2017/01/03/2017-01-03-Android开发中遇到的一些的小点/","text":"碰到ScrollView嵌套ListView或者RecyclerView优先选择添加head,而不要去嵌套，否则出现Item的高度的问题(ps:以前的刚入门的问题,记下来了,大神略过); android:clipToPadding 我们在用到ListView 或者RecyclerView的时候，需求是需要有一个内边距的需求,而用padding的时候会有一个白色的内边距，这时候我们就可以用到ListView、RecyclerView的强大的属性android:clipToPadding=&quot;false&quot;, 默认情况下android:clipToPadding=&quot;true&quot; clipToPadding的解释： Defines whether the ViewGroup will clip its children and resize (but not clip) any EdgeEffect to its padding, if padding is not zero. API 定义ViewGroup是否将剪切其子项，并将任何EdgeEffect调整大小（但不剪裁）为其填充 adb命令 Android查看运行的前台界面的activity 1adb shell dumpsys window windows | grep -E \"mCurrentFocus'\" Android手机WIFI去感叹号 1adb shell \"settings put global captive_portal_server Android 6.0查看当前手机的危险权限： 1adb shell pm list permissions -g -d ​ 图片的压缩 在做一个项目的时候,ui妹妹给了icon的图,打开一看4M多,吓得我赶紧压缩)下图片 CardView的Padding兼容(AndroidL以上和L以下的版本显示的padding不一致) 12app:cardPreventCornerOverlap=\"true\"app:cardUseCompatPadding=\"true\" 显示密码 android中有的时候需要显示密码,怕自己忘记 12edittext.setTransformationMethod(HideReturnsTransformationMethod.getInstance()); //显示密码edittext.setTransformationMethod(PasswordTransformationMethod.getInstance()); //隐藏密码 DrawLayout 侧边栏有的时候会有一层黑色的遮罩 1mDrawLayout.setScrimColor(getResources().getColor(android.R.color.transparent)); TextView默认上下室友一定的Padding，有时候我们并不需要空白，加上下面这条属性： 1includeFontPadding=\"false\" android:animateLayoutChanges酷炫的属性，如果触发layout()(比如它的子View为GONE),系统会默认加上布局改变时的动画特效； RecyclerView的布局管理器，其实在布局文件中也可以添加 1app:layoutManager=\"android.support.v7.widget.RecyclerView.LayoutManager\" android studio 中新创建的java Moudle 使用System.out.print()方法时候，中文会出现乱码的问题(加上下面这句就行)： 123tasks.withType(JavaCompile) &#123; options.encoding = \"UTF-8\"&#125; Android 5.0背景涟漪效果： 12?android:attr/selectableItemBackground 有界限的波纹?android:attr/selectableItemBackgroundBorderless 可以超出视图区域的波纹 android.os.Build 类包含了我们常用的一些系统的东西，比如说机型号，版本号，基带版本什么的 123456builder.append(\"手机品牌\" + android.os.Build.BRAND + \"\\n\");builder.append(\"手机的型号 设备名称\" + android.os.Build.MODEL + \"\\n\");builder.append(\"设备制造商\" + android.os.Build.MANUFACTURER + \"\\n\");builder.append(\"系统版\" + android.os.Build.VERSION.RELEASE + \"\\n\");builder.append(\"设备版本号\" + android.os.Build.ID + \"\\n\");builder.append(\"设备的唯一标识\" + android.os.Build.FINGERPRINT + \"\\n\"); 这篇文章会持续更新~","tags":[{"name":"Android","slug":"Android","permalink":"/dayanguai.website/tags/Android/"}]}]